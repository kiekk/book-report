apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  labels:
    app: api
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
        - name: nginx-api
          # 1-1 API 서버 리버스 프록시 완성 이미지 사용
          image: ghcr.io/jpubdocker/taskapp-nginx-api
          env:
            - name: NGINX_PORT
              value: "80"
            - name: SERVER_NAME
              value: "nginx-api"
            # 2 api 컨테이너 주소 설정
            - name: BACKEND_HOST
              value: "localhost:8180"
            - name: BACKEND_MAX_FAILS
              value: "3"
            - name: BACKEND_FAIL_TIMEOUT
              value: "10s"
        - name: api
          # 1-2 API 서버의 완성 이미지 사용
          image: ghcr.io/jpubdocker/taskapp-api
          ports:
            - containerPort: 8180
          args:
            - "server"
            # 3-3 마운트된 설정 파일의 경로 지정
            - "--config-file=/var/run/secrets/api-config.yaml"
          volumeMounts:
            # 3-2 API 서버의 설정 파일이 있는 볼륨 마운트
            - name: api-config
              mountPath: "/var/run/secrets"
              readOnly: true
      volumes:
        # 3-1 시크릿으로 API 서버의 설정 파일이 있는 볼륨 설정
        - name: api-config
          secret:
            secretName: api-config
            items:
              - key: api-config.yaml
                path: api-config.yaml
---
# 4 API 서버의 파드에 트래픽을 전달하는 서비스
apiVersion: v1
kind: Service
metadata:
  name: api
  labels:
    app: api
spec:
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: api
